public void recorder()
        {
            int count = checked(this.lstAccounts.Items.Count - 1);
            for (int i = 0; i <= count; i++)
            {
                try
                {
                    if (!this.deletedAccount)
                    {
                        object item = this.lstAccounts.Items[i];
                        object[] objArray = new object[] { ":" };
                        string[] strArrays = (string[])NewLateBinding.LateGet(item, null, "split", objArray, null, null, null);
                        string str = strArrays[0];
                        string str1 = strArrays[1];
                        Random random = new Random();
                        CookieContainer cookieContainer = new CookieContainer();
                        string str2 = "Mozilla/6.0 (Windows NT 6.2; WOW64; rv:16.0.1) Gecko/20121011 Firefox/16.0.1";
                        Uri uri = new Uri(string.Concat("http://", str1, ".op.gg/summoner/ajax/spectator/"));
                        string str3 = string.Concat("userName=", str, "&force=true");
                        byte[] bytes = (new UTF8Encoding()).GetBytes(str3);
                        HttpWebRequest length = (HttpWebRequest)WebRequest.Create(uri);
                        length.Method = "POST";
                        length.KeepAlive = true;
                        length.CookieContainer = cookieContainer;
                        length.UserAgent = str2;
                        length.ContentLength = (long)(checked((int)bytes.Length));
                        length.Referer = string.Concat("http://", str1, ".op.gg/summoner/userName=", str);
                        length.ContentType = "application/x-www-form-urlencoded; charset=UTF-8";
                        Stream requestStream = length.GetRequestStream();
                        requestStream.Write(bytes, 0, checked((int)bytes.Length));
                        requestStream.Close();
                        HttpWebResponse response = (HttpWebResponse)length.GetResponse();
                        cookieContainer.Add(response.Cookies);
                        StreamReader streamReader = new StreamReader(response.GetResponseStream());
                        string end = streamReader.ReadToEnd();
                        if (end.Contains("Spectate"))
                        {
                            if (!end.Contains("NowRecording"))
                            {
                                string str4 = "/match/observer/id=";
                                string str5 = "\"";
                                int num = 0;
                                string between = Classes.GetBetween(ref end, ref str4, ref str5, ref num);
                                uri = new Uri(string.Concat("http://", str1, ".op.gg/summoner/ajax/requestRecording.json/gameId=", between));
                                length = (HttpWebRequest)WebRequest.Create(uri);
                                length.KeepAlive = true;
                                length.UserAgent = str2;
                                length.CookieContainer = cookieContainer;
                                length.Referer = string.Concat("http://", str1, ".op.gg/summoner/userName=", str);
                                response = (HttpWebResponse)length.GetResponse();
                                cookieContainer.Add(response.Cookies);
                                streamReader = new StreamReader(length.GetResponse().GetResponseStream());
                                end = streamReader.ReadToEnd();
                                streamReader.Close();
                                if (!end.Contains("error\":true"))
                                {
                                    this.lstLog.Items.Add(string.Concat(str, ":", str1, " ## recording"));
                                    form1.FlashWindow((int)this.Handle, 1);
                                    this.lstLog.TopIndex = checked(this.lstLog.Items.Count - 1);
                                    this.gamesrecorded = checked(this.gamesrecorded + 1);
                                }
                            }
                            this.lblStatus.Text = Conversions.ToString(this.gamesrecorded);
                        }
                    }
                    else
                    {
                        break;
                    }
                }
                catch (WebException webException)
                {
                    ProjectData.SetProjectError(webException);
                    ProjectData.ClearProjectError();
                }
            }
        }
